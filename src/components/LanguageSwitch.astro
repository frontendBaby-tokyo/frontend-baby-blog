---
import { getAlternatePath, type Languages } from '@/i18n/utils'
import { languages } from '@/i18n/ui'

const currentLang = Astro.params.lang as Languages
const currentPath = Astro.url.pathname

// 対象言語を決定（より安全な方法）
const targetLang: Languages = currentLang === 'ja' ? 'en' : 'ja'
const alternatePath = getAlternatePath(currentPath, currentLang, targetLang)

console.log('Target:', { targetLang, alternatePath })
---

<div class='language-switch' data-current-lang={currentLang}>
	<a
		href={alternatePath}
		class='flex items-center gap-1 text-sm hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200 px-2 py-1 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800'
		aria-label={`Switch to ${languages[targetLang]}`}
		title={`Switch to ${languages[targetLang]}`}
	>
		<span class='flag text-lg'>{targetLang === 'ja' ? '🇯🇵' : '🇺🇸'}</span>
		<span class='lang-text font-medium'>{languages[targetLang]}</span>
	</a>
</div>

<script>
	// ページ読み込み時とナビゲーション時に言語スイッチを更新
	function updateLanguageSwitch() {
		const languageMap: { [key: string]: string } = { '/ja/': '/en/', '/en/': '/ja/' }
		const currentPath = window.location.pathname
		const link = document.querySelector('.language-switch a')
		const languageSwitch = document.querySelector('.language-switch')

		if (link && languageSwitch) {
			// 現在の言語を検出
			const currentLang = currentPath.includes('/ja/') ? 'ja' : 'en'
			const targetLang = currentLang === 'ja' ? 'en' : 'ja'

			// href属性を更新
			const newPath = currentPath.replace(/\/(ja|en)\//, (match) => languageMap[match])
			link.setAttribute('href', newPath)

			// data-current-lang属性を更新
			languageSwitch.setAttribute('data-current-lang', currentLang)

			// フラグとテキストを更新
			const flagElement = link.querySelector('.flag')
			const textElement = link.querySelector('.lang-text')

			if (flagElement && textElement) {
				flagElement.textContent = targetLang === 'ja' ? '🇯🇵' : '🇺🇸'
				textElement.textContent = targetLang === 'ja' ? '日本語' : 'English'

				// aria-labelとtitle属性も更新
				const targetLanguageName = targetLang === 'ja' ? '日本語' : 'English'
				link.setAttribute('aria-label', `Switch to ${targetLanguageName}`)
				link.setAttribute('title', `Switch to ${targetLanguageName}`)
			}
		}
	}

	// 初回読み込み時
	document.addEventListener('DOMContentLoaded', updateLanguageSwitch)

	// Astroのページ遷移時（View Transitionsが有効な場合）
	document.addEventListener('astro:page-load', updateLanguageSwitch)

	// 通常のページ遷移時（fallback）
	document.addEventListener('astro:after-swap', updateLanguageSwitch)
</script>

<style>
	.language-switch a {
		@apply select-none;
	}

	.language-switch a:hover {
		@apply scale-105;
		transform-origin: center;
	}
</style>
