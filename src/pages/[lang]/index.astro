---
import ListPostsSimple from '@/components/ListPostsSimple'
import Sidebar from '@/components/Sidebar'
import Pagination from '@/components/Pagination'
import BaseLayout from '@/layouts/BaseLayout'
import { getCollection } from 'astro:content'
import { useTranslations } from '@/i18n/utils'
import type { Languages } from '@/i18n/utils'
import { siteConfig } from '@/data/site.config'

export async function getStaticPaths() {
	return [{ params: { lang: 'ja' } }, { params: { lang: 'en' } }]
}

const { lang } = Astro.params
const t = useTranslations(lang as Languages)

// 1ページ目の記事を取得（ページネーションの1ページ目と同じロジック）
const allPosts = await getCollection('blog', ({ data }) => !data.draft)
const posts = allPosts
	.filter(({ id }) => id.startsWith(`${lang}/`))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, siteConfig.paginationSize)

// 総記事数からページネーションの情報を計算
const totalPosts = allPosts.filter(({ id }) => id.startsWith(`${lang}/`)).length
const totalPages = Math.ceil(totalPosts / siteConfig.paginationSize)
const hasNextPage = totalPages > 1

// ページ情報オブジェクトを作成（Paginationコンポーネント用）
const pageInfo = {
	currentPage: 1,
	lastPage: totalPages,
	start: 0,
	url: {
		next: hasNextPage ? `${import.meta.env.BASE_URL}${lang}/2/` : null,
		prev: null
	}
}
---

<BaseLayout title={t('nav.home')}>
	<!-- 2カラムレイアウト: メインコンテンツ + サイドバー -->
	<div class='grid grid-cols-1 lg:grid-cols-[2fr_1fr] gap-8 mt-6'>
		<!-- メインコンテンツ -->
		<main>
			<h2 class='text-lg font-medium tracking-wide mb-4 text-gray-900 dark:text-white'>
				{t('posts.latest')}
			</h2>
			<ListPostsSimple posts={posts} />

			<!-- ページネーション -->
			{
				totalPages > 1 && (
					<div class='mt-8'>
						<Pagination page={pageInfo} />
					</div>
				)
			}
		</main>

		<!-- サイドバー -->
		<div class='md:order-last'>
			<Sidebar />
		</div>
	</div>
</BaseLayout>
